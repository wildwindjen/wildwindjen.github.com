<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Build Tool | Wild Wind]]></title>
  <link href="http://wildwindjen.github.io/blog/categories/build-tool/atom.xml" rel="self"/>
  <link href="http://wildwindjen.github.io/"/>
  <updated>2013-08-06T10:06:07+08:00</updated>
  <id>http://wildwindjen.github.io/</id>
  <author>
    <name><![CDATA[Wildwind Jen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[馬糞處女作]]></title>
    <link href="http://wildwindjen.github.io/blog/2013/08/05/first-maven-accomplishment/"/>
    <updated>2013-08-05T09:30:00+08:00</updated>
    <id>http://wildwindjen.github.io/blog/2013/08/05/first-maven-accomplishment</id>
    <content type="html"><![CDATA[<h2>總結</h2>

<blockquote><p>我是個現實主義者，我喜歡目前自己所從事的一切，並對此始終深信不疑。 -- 巴菲特。</p></blockquote>

<p>從做中學累積經驗真的很快，但是沒記下來，就等於沒有。這段期間歷經了幾個問題：</p>

<ol>
<li>編碼議題 (properties)</li>
<li>如何建立本地函示庫 (repository)</li>
<li>特定函式庫只想要支援 compile 階段，但是 package、deploy 不包含。(scope)</li>
<li>FCKeditor 不想要用它依賴的 slf4j-api 版本。(exclusions)</li>
<li>依照佈署環境產生不同的設定檔。(profiles)</li>
</ol>


<p>有些問題之前已經在 <a href="/blog/2013/07/30/migrate-tomcat-webapp-to-maven-qa/">Migrate Tomcat Webapp to Maven QA</a> 分享過了，所以直接看成品囉。</p>

<h2>成品</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>google plus comments </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;
</span><span class='line'>&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
</span><span class='line'>&lt;groupId&gt;wild.wind&lt;/groupId&gt;
</span><span class='line'>&lt;artifactId&gt;WildTest&lt;/artifactId&gt;
</span><span class='line'>&lt;packaging&gt;war&lt;/packaging&gt;
</span><span class='line'>&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
</span><span class='line'>&lt;name&gt;WildTest Maven Webapp&lt;/name&gt;
</span><span class='line'>&lt;url&gt;http://maven.apache.org&lt;/url&gt;
</span><span class='line'>&lt;!-- --&gt;
</span><span class='line'>&lt;properties&gt;
</span><span class='line'>    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
</span><span class='line'>    &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
</span><span class='line'>&lt;/properties&gt;
</span><span class='line'>
</span><span class='line'>&lt;repositories&gt;
</span><span class='line'>    &lt;!-- 建立 Local 函示庫 --&gt;
</span><span class='line'>    &lt;repository&gt;
</span><span class='line'>        &lt;id&gt;ProjectRepo&lt;/id&gt;
</span><span class='line'>        &lt;name&gt;ProjectRepo&lt;/name&gt;
</span><span class='line'>        &lt;url&gt;file:///${project.basedir}/libs&lt;/url&gt;
</span><span class='line'>    &lt;/repository&gt;
</span><span class='line'>&lt;/repositories&gt;
</span><span class='line'>
</span><span class='line'>&lt;dependencies&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;junit&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;junit&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;3.8.1&lt;/version&gt;
</span><span class='line'>        &lt;scope&gt;test&lt;/scope&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- servlet, tomcat 本身應該要有，所以指定 provided --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;2.5&lt;/version&gt;
</span><span class='line'>        &lt;scope&gt;provided&lt;/scope&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- jsp, tomcat 本身應該要有，所以指定 provided --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;2.0&lt;/version&gt;
</span><span class='line'>        &lt;scope&gt;provided&lt;/scope&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- MySQL JDBC, 模擬佈署環境 tomcat 自己放，所以指定 provided --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;mysql&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;5.2.18&lt;/version&gt;
</span><span class='line'>        &lt;scope&gt;provided&lt;/scope&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- Oracle JDBC, 模擬佈署環境 tomcat 自己放，所以指定 provided --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;oracle&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;ojdbc14&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>        &lt;scope&gt;provided&lt;/scope&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- Struts --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;struts&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;struts&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.2.0&lt;/version&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- FCKeditor, 改用比較新的 slf4j-api --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;net.fckeditor&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;java-core&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;2.0&lt;/version&gt;
</span><span class='line'>        &lt;exclusions&gt;
</span><span class='line'>            &lt;exclusion&gt;
</span><span class='line'>                &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
</span><span class='line'>                &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
</span><span class='line'>            &lt;/exclusion&gt;
</span><span class='line'>        &lt;/exclusions&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- slf --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.5.8&lt;/version&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.5.8&lt;/version&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- 去 Local 函示庫找 Jar 檔 --&gt;
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;wild&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;wind&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;wild&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;wild&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>        &lt;classifier&gt;encode&lt;/classifier&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>        &lt;groupId&gt;wild&lt;/groupId&gt;
</span><span class='line'>        &lt;artifactId&gt;wild&lt;/artifactId&gt;
</span><span class='line'>        &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>        &lt;classifier&gt;decode&lt;/classifier&gt;
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>&lt;/dependencies&gt;
</span><span class='line'>
</span><span class='line'>&lt;profiles&gt;
</span><span class='line'>    &lt;!-- 本機開發設定檔 --&gt;
</span><span class='line'>    &lt;profile&gt;
</span><span class='line'>        &lt;id&gt;dev_local&lt;/id&gt;
</span><span class='line'>        &lt;activation&gt; &lt;!-- 預設使用此設定檔 --&gt;
</span><span class='line'>            &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
</span><span class='line'>        &lt;/activation&gt;
</span><span class='line'>        &lt;build&gt;
</span><span class='line'>            &lt;plugins&gt;
</span><span class='line'>                &lt;plugin&gt;
</span><span class='line'>                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
</span><span class='line'>                    &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
</span><span class='line'>                    &lt;version&gt;2.2&lt;/version&gt;
</span><span class='line'>                    &lt;configuration&gt;
</span><span class='line'>                        &lt;webResources&gt;
</span><span class='line'>                            &lt;resource&gt;
</span><span class='line'>                                &lt;directory&gt;src/main/webconf/dev_local&lt;/directory&gt;
</span><span class='line'>                                &lt;targetPath&gt;WEB-INF&lt;/targetPath&gt;
</span><span class='line'>                            &lt;/resource&gt;
</span><span class='line'>                        &lt;/webResources&gt;
</span><span class='line'>                    &lt;/configuration&gt;
</span><span class='line'>                &lt;/plugin&gt;
</span><span class='line'>            &lt;/plugins&gt;
</span><span class='line'>        &lt;/build&gt;
</span><span class='line'>    &lt;/profile&gt;
</span><span class='line'>
</span><span class='line'>    &lt;!-- 線上設定檔 --&gt;
</span><span class='line'>    &lt;profile&gt;
</span><span class='line'>        &lt;id&gt;prod&lt;/id&gt;
</span><span class='line'>        &lt;build&gt;
</span><span class='line'>            &lt;plugins&gt;
</span><span class='line'>                &lt;plugin&gt;
</span><span class='line'>                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
</span><span class='line'>                    &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
</span><span class='line'>                    &lt;version&gt;2.4&lt;/version&gt;
</span><span class='line'>                    &lt;configuration&gt;
</span><span class='line'>                        &lt;webResources&gt;
</span><span class='line'>                            &lt;resource&gt;
</span><span class='line'>                                &lt;directory&gt;src/main/webconf/prod&lt;/directory&gt;
</span><span class='line'>                                &lt;targetPath&gt;WEB-INF&lt;/targetPath&gt;
</span><span class='line'>                            &lt;/resource&gt;
</span><span class='line'>                        &lt;/webResources&gt;
</span><span class='line'>                    &lt;/configuration&gt;
</span><span class='line'>                &lt;/plugin&gt;
</span><span class='line'>            &lt;/plugins&gt;
</span><span class='line'>        &lt;/build&gt;
</span><span class='line'>    &lt;/profile&gt;
</span><span class='line'>&lt;/profiles&gt;
</span><span class='line'>
</span><span class='line'>&lt;build&gt;
</span><span class='line'>    &lt;finalName&gt;WildTest&lt;/finalName&gt;
</span><span class='line'>&lt;/build&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;/project>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate Tomcat Webapp to Maven QA]]></title>
    <link href="http://wildwindjen.github.io/blog/2013/07/30/migrate-tomcat-webapp-to-maven-qa/"/>
    <updated>2013-07-30T09:22:00+08:00</updated>
    <id>http://wildwindjen.github.io/blog/2013/07/30/migrate-tomcat-webapp-to-maven-qa</id>
    <content type="html"><![CDATA[<h2>總結</h2>

<blockquote><p>我有預感，這只是個開始。-- 毛利小五郎。</p></blockquote>

<p>工作上做了點嘗試，把剛接手的專案，試著導入 Maven 。因為想要針對一團亂的外部函式庫做管理。而馬糞，是我第一個想到的。倉促之下，只能先做問題集的整理。</p>

<h2>原本的專案編碼是 UTF-8</h2>

<p>這個問題大概只有發生在開發平台是 windows 的吧。偏偏我就是其中一個受害者。目前已知有兩個作法，實際上是同一種解法，就是餵 <code>project.build.sourceEncoding</code> 系統屬性值給他。</p>

<h3>作法一 Command Line</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Cold Block </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn -Dfile.encoding=UTF-8 -Dproject.build.sourceEncoding=UTF-8 package</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>作法二 POM.xml</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Cold Block </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;project  xmlns=....&gt;
</span><span class='line'>    ...
</span><span class='line'>    &lt;properties&gt;
</span><span class='line'>        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
</span><span class='line'>    &lt;/properties&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>去哪裡得知外部函式庫的 maven 設定</h2>

<p>假設我是要加進來 log4j ，請 google maven log4j。你會找到<a href="http://www.mvnrepository.com/artifact/log4j/log4j">這一頁</a>。請點選你想要找的版本，接著就是複製設定到 pom.xml 了。</p>

<h2>自家的 jar ，怎麼兜進去</h2>

<p>在專案目錄下新建一個 libs 子目錄(跟 pom.xml 同一層)。準備放自家的函式庫。</p>

<p>依照 maven 的版控結構規則，重新建立子目錄 <code>{gourpId}/{artifactId}/{version}</code> 以及重新命名 jar 為 <code>{artifactId}-{version}.jar</code> 。</p>

<p>舉例來說：原本叫做 wade.jar 的檔案，我就隨便給他個 groupId=wild 、 artifactId=wind 、 version=1.0。所以我就必須在 {PROJECT_DIR}/libs 下建立 wild/wind/1.0/wind-1.0.jar。</p>

<p>然後記得新增 repository 和 dependency 設定，請參考下方。</p>

<p>有個延伸題，我有兩個 jar 檔，都想要放在 wild/wind/1.0/ 下怎麼辦，請多設定個 <code>classifier</code> ，檔案的命名就變成要 <code>{artifactId}-{version}-{classifier}.jar</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Cold Block </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;project  xmlns=....&gt;
</span><span class='line'>    ...
</span><span class='line'>    &lt;repositories&gt;
</span><span class='line'>        &lt;repository&gt;
</span><span class='line'>            &lt;id&gt;ProjectRepo&lt;/id&gt;
</span><span class='line'>            &lt;name&gt;ProjectRepo&lt;/name&gt;
</span><span class='line'>            &lt;url&gt;file:///${project.basedir}/libs&lt;/url&gt;
</span><span class='line'>        &lt;/repository&gt;
</span><span class='line'>    &lt;/repositories&gt;
</span><span class='line'>    ....
</span><span class='line'>    &lt;dependencies&gt;
</span><span class='line'>        &lt;dependency&gt;
</span><span class='line'>            &lt;groupId&gt;wild&lt;/groupId&gt;
</span><span class='line'>            &lt;artifactId&gt;wind&lt;/artifactId&gt;
</span><span class='line'>            &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>            &lt;classifier&gt;encode&lt;/classifier&gt;
</span><span class='line'>        &lt;/dependency&gt;
</span><span class='line'>        &lt;dependency&gt;
</span><span class='line'>            &lt;groupId&gt;wild&lt;/groupId&gt;
</span><span class='line'>            &lt;artifactId&gt;wind&lt;/artifactId&gt;
</span><span class='line'>            &lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>            &lt;classifier&gt;decode&lt;/classifier&gt;
</span><span class='line'>        &lt;/dependency&gt;
</span><span class='line'>    &lt;/dependencies&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>The method getJspApplicationContext(ServletContext) is undefined for the type JspFactory</h2>

<p>說穿了，就是原本 tomcat 就有 jsp-api.jar (servlet-api.jar 也一樣)，匯出來的專案又包含了 jsp-api.jar，所以造成用錯版本。</p>

<p>所以要達成一個目標：package 之後的動作都不要有 jsp-api.jar 。這時候就要靠這一味： scope 。
至於值的意義請參考 <a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope%20Dependency_Scope">Dependency Scope</a>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Cold Block </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;dependency&gt;
</span><span class='line'>    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
</span><span class='line'>    &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
</span><span class='line'>    &lt;version&gt;2.0&lt;/version&gt;
</span><span class='line'>    &lt;scope&gt;provided&lt;/scope&gt;
</span><span class='line'>&lt;/dependency&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>本來如果只是這樣就罷手，也就無事一身輕。偏偏想到目前開發都是使用 eclipse，就騷屁股(台語)地想要一氣呵成。所以又有下面的 m2eclipse 篇。</p>

<h2>m2eclipse 沒有 run on server</h2>

<p>專案 > 屬性 > Facets
勾選 Dynamic Project Module，並且記得挑選版本。否則之後無法變更。</p>

<h2>lib 不會跟著 deploy 到 tomcat plugin</h2>

<p>參考 <a href="http://stackoverflow.com/questions/6356421/maven-tomcat-projects-in-eclipse-indigo-3-7">stackover</a> ，使用路徑定義的方式 Deployment Assemply。</p>

<ul>
<li>maven 專案目錄上按右鍵，properties。</li>
<li>新增對應(Folder)

<ul>
<li>Source: target/{your-project-name}/WEB-INF/lib</li>
<li>Deploy Path: WEB-INF/lib</li>
</ul>
</li>
<li>Run As：

<ul>
<li>Maven Clean</li>
<li>Maven Install</li>
<li>Run on Server</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[馬糞(Maven)初體驗]]></title>
    <link href="http://wildwindjen.github.io/blog/2013/05/16/maven-install/"/>
    <updated>2013-05-16T22:42:00+08:00</updated>
    <id>http://wildwindjen.github.io/blog/2013/05/16/maven-install</id>
    <content type="html"><![CDATA[<h2>總結</h2>

<blockquote><p>當個新時代的糞青。</p></blockquote>

<p>知道馬糞這個東西很久了，最近突然想起來，開始來玩看看。當然，會突然想起他，是因為想要拿來管理一些手上的專案。Maven 是一個軟體專案管理工具，除了軟體建構(Building)、測試、打包、佈署以外，還包含套件依賴性解決以及軟體分享的特性，定位其實跟 ANT 等 Building Tool 不太一樣。</p>

<p>在軟體建構部分，和 Ant 最大的不同在於，Maven 是採慣例制的(Convension Over Configuration)。也就是說，很多東西可以不設定，會有預設值，而這個預設值，是大部分情況下適用的(慣例)。不用像 Ant 一樣，每個動作都指定到位。只需要針對和慣例不同的特殊狀況，再去設定變更即可。輕鬆多了。</p>

<h2>安裝</h2>

<ul>
<li>先至<a href="http://maven.apache.org/download.cgi%20Maven">Maven官網</a>下載</li>
<li>解壓縮之後，放到想放的地方</li>
<li>設定系統的環境變數 M2_HOME，指到剛剛的馬糞目錄，例如我的就是 <code>D:\PROGRAM\apache-maven-3.0.5</code>。</li>
<li>接著在 path 變數新增 %M2_HOME%\bin。</li>
<li>打開 console 介面，執行 <code>mvn --version</code>。應該要看到類似的訊息：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Cold Block </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Apache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 21:51:
</span><span class='line'>28+0800)
</span><span class='line'>Maven home: D:\PROGRAM\apache-maven-3.0.5
</span><span class='line'>Java version: 1.6.0_38, vendor: Sun Microsystems Inc.
</span><span class='line'>Java home: C:\Program Files\Java\jdk1.6.0_38\jre
</span><span class='line'>Default locale: zh_TW, platform encoding: MS950
</span><span class='line'>OS name: "windows 7", version: "6.1", arch: "amd64", family: "windows"</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<h2>行前教育</h2>

<p>從 <code>Maven: The Definitive Guide</code> 裡面得知，Maven 核心做的事情很少，除了解析 XML 和追蹤生命週期、外掛的能力以外，主要是透過外掛(Plugins)撐完全場。</p>

<pre>
The core of Maven is pretty dumb, it doesn't know how to do much beyond parsing
a few XML documents and keeping track of a lifecycle and a few plugins.
</pre>


<h3>Plugins &amp; Goals</h3>

<p>把 Plugins 想成一個個獨立的元件(或者分類，相關類型的功能總是會集中在一起)，而每個元件各自提供一或者多個功能，這些功能我們稱它為 Goals。每個 Goal 都是代表一個獨立的任務，是 Maven 執行工作的最小單位。</p>

<p><code>compiler:compile</code> 代表的就是 compiler 這個 plugin 下的 compile goal。</p>

<p>由於透過網路眾人的力量以及分享，Plugins 函式庫日益成長茁壯，可以支援的能力包山包海，讓整個軟體的建構、管理，不太需要重頭到尾打造，最多只要微調。</p>

<h3>Build Lifecycle 和 Phases</h3>

<p>剛剛提到 Goals 負責的是各自獨立的作業，彼此之前沒有任何關係，或者順序性上的依賴。如果直接拿 Goal 來用，設定會變得太瑣碎。所以需要有更宏觀的概念，也就是所謂的生命週期(Build Lifecycle)和階段(Phases)。</p>

<p>目前 Maven 內建了三大 Build Lifecycle： Default、Clean、Site。</p>

<ul>
<li>Default 是專案建構流程的生命週期。</li>
<li>Clean 是處理專案清空任務時的生命週期。</li>
<li>Site 則用來產生描述專案相關資訊的站台文件時的生命週期。</li>
</ul>


<p>每個生命週期都各自包含了多個階段，代表的是生命週期裡的步驟。拿最常用的 Default 來看，常用的階段如下：(詳細定義請參考 <a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference%20%20Lifecycle%20Reference">Lifecycle Reference</a>)</p>

<ul>
<li>compile: 編譯程式。</li>
<li>test: 測試已編譯的程式。</li>
<li>package: 將已編譯的程式打包。例如打包成 JAR 檔。</li>
<li>install: 將打包檔放進去本地的 Respository。</li>
<li>deploy: 將最後成品分享至遠端的 Respository。</li>
</ul>


<p>階段本身有順序上的依賴，也就是當命令下達執行 test 階段時，test 之前的階段，都會先依序被執行。那執行到底是執行哪些動作呢？</p>

<p>之前說了，Goal 才是執行工作的最小單位，所以 Phase 和 Goal 必須建立起連結關係。可以查看 <a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Built-in_Lifecycle_Bindings%20%20Built-in%20Lifecycle%20Bindings">Built-in Lifecycle Bindings</a>。左邊是 Phase ，右邊是對應到的 Goal(格式 Plugin:Goal)。</p>

<p>所以，許多 Phases 組成一個 Lifecycle，而每個 Phase 又是對應到(binding)一或多個 Goal。Lifecycle 代表的是想要執行的管理種類(建構、清理、還是產生站台文件)，Phase 負責順序上的依賴，以及簡化設定的使命，Goal 就是真正執行功能的小螺絲。</p>

<h3>Packaging</h3>

<p>哪些 Goal 對應到哪些 Phase，依照 POM 內的 packaging 元素設定，會略有不同，請參考 <a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Built-in_Lifecycle_Bindings%20%20Built-in%20Lifecycle%20Bindings">Built-in Lifecycle Bindings</a>。</p>

<p>拿 jar 跟 ear 來比較，可以得知 package phase 所使用的 goal 就不一樣了。packaging 預設值是 jar。</p>

<p>因為 packaging 元素設定，支援的 Phase 似乎也略有差異。</p>

<h3>Plugin</h3>

<p>透過 POM 的 plugin 設定，可以為各預設的 Phase 加上一些額外的 Goal，執行的順序依序為：內建、自行設定(自行設定的順序則以在 POM 上的順序)。以下例子是示範為 process-test-resources Phase 新增一個 time 的 Goal。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>maven plugin setting </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;plugin>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>&lt;groupId&gt;com.mycompany.example&lt;/groupId&gt;
</span><span class='line'>&lt;artifactId&gt;display-maven-plugin&lt;/artifactId&gt;
</span><span class='line'>&lt;version&gt;1.0&lt;/version&gt;
</span><span class='line'>&lt;executions&gt;
</span><span class='line'>    &lt;execution&gt;
</span><span class='line'>        &lt;phase&gt;process-test-resources&lt;/phase&gt;
</span><span class='line'>        &lt;goals&gt;
</span><span class='line'>            &lt;goal&gt;time&lt;/goal&gt;
</span><span class='line'>        &lt;/goals&gt;
</span><span class='line'>    &lt;/execution&gt;
</span><span class='line'>&lt;/executions&gt;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;/plugin></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>話說 Goal 本身就有資訊來註記可以綁到哪些 Phase 上了，所以假設上面的 time 這個 Goal 在他裡面註記只能綁到 process-test-resources Phase，其實 phase 元素的設定是可以省略的。</p>

<h3>groupId, artifactId, version</h3>

<p>Maven 使用這三個資訊來定位座標。講白話一點，就是這三個資訊加起來，是一個專案的識別碼。</p>

<ul>
<li>groupId 代表的是公司、組織或團隊資訊。</li>
<li>arifactId 是單一專案名稱</li>
<li>version 是專案的版號</li>
</ul>


<p>以上三個資訊在不同專案間，不能完全一模一樣。packaging 雖然也是重要的資訊，但不是用來定位的一份子。標記格式如下：</p>

<pre>
groupId:artifactId:packaging:version
</pre>


<p>這樣的標記方式應用於 Maven 的依賴機制上。</p>

<p>在下面我將會創建一個 wild.wind:wadetest:jar:1.0-SNAPSHOT 專案當範例。</p>

<h2>開始第一個 Maven</h2>

<ul>
<li>建立第一個 Maven</li>
</ul>


<pre>
mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DgroupId=wild.wind -DartifactId=wadetest
</pre>


<p>會看到許多專案類型可以挑選，預設是 264 org.apache.maven.archetypes:maven-archetype-quickstart (An archetype which contains a sample Maven project.)。採用預設直接按 Enter 就好，想要挑別的，就輸入對應的編號，再按 Enter。
<img class="center" src="/images/wildwind/maven_install/first_maven.png" width="600" height="350" title="Choose Maven Project" alt="Choose Maven Project"></p>

<ul>
<li>接著會要你挑專案類型使用的版本(別懷疑，同一種類型不只一種版本可以挑)，小的習慣預設值。</li>
<li>然後設定想要的版號，這個資訊是會出現在自己專案的 POM 裡。跟上面那個不一樣。</li>
<li>然後要你確認一下資訊對不對。按下 Enter 就建立完成了。</li>
</ul>


<p>想要直接指定建立的專案類型，不想在那邊挑，只要輸入時，直接改指定 archetypeArtifactId 的值：</p>

<pre>
mvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart -DgroupId=wild.wind -DartifactId=wadetest
</pre>


<p>記得 maven-archetype-quickstart 換成你要使用的 artifactId 就好。如果不知道 artifactId 在哪裡，跑列表的時候就有看到囉，想辦法找你常用的吧。</p>

<pre>
....
264: remote -> org.apache.maven.archetypes:maven-archetype-quickstart ....
265: remote -> org.apache.maven.archetypes:maven-archetype-site   ...
</pre>


<p>回來現場。打開新建的 Maven 專案目錄，最簡單的 Java 專案可以看到裡面的目錄結構大致如下：</p>

<pre>
wadetest
    POM.xml
    src
        main
            java
        test
</pre>


<p>這是最簡單的樣子，Maven 專案的大原則就是要有 POM.xml ，以及 src 下有 main、test ，test 是用來放測試程式的。main 下面放的是 source code，依照你的專案類型 main 底下有不同的子目錄分類。Spring 類型的 Maven 專案就可能長這樣：</p>

<pre>
wadetest
    POM.xml
    src
        main
            java
            resources
            webapp
                WEB-INF
        test
</pre>


<p>compile 後 src 會多一個兄弟目錄 target。裡面就是放著成品，可能是 classes ，也有可能是打包後的 jar。</p>

<pre>
wadetest
    POM.xml
    src
        main
            java
        test
    target
        classes
</pre>


<p>就這樣，跟一般 java 專案目錄結構比起來，src 下多了 main、test 而已，而不是直接放 source code。</p>

<h2>執行專案建構週期</h2>

<p>試試依序以下的命令，並在每一次執行後，去看看目錄的變化</p>

<ul>
<li>mvn compile</li>
<li>mvn test</li>
<li>mvn package</li>
<li>mvn clean</li>
</ul>


<p>以後要直接打包，直接 <code>mvn package</code> 就好，前面的步驟會自動先做。</p>

<h2>進階指令</h2>

<h3>想要知道這個 plugin 有哪些 goals</h3>

<p>可以使用 help 這個 plugin 裡面的 describe。示範用來查詢 compiler 這個 plugin：</p>

<pre>
mvn help:describe -Dplugin=compiler -Dmedium=true
</pre>


<p>或者如果 plugin 有提供 help，就直接執行看看：</p>

<pre>
mvn compiler:help
</pre>


<h2>待學習</h2>

<p>如果只是單純的私下開發與管理，以上的觀念應該是夠用了，但是如果要跟外面世界合作應該還要搞懂 Remote Repository。另外 Local Repository &amp; Remote Repository 負責了 Maven 的依賴性管理，詳細機制需要再研究。</p>

<p>再找時間踹看看。</p>
]]></content>
  </entry>
  
</feed>
